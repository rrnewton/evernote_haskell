{-# LANGUAGE DeriveDataTypeable #-}
{-# OPTIONS_GHC -fno-warn-missing-fields #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-----------------------------------------------------------------
-- Autogenerated by Thrift Compiler (0.7.0)                      --
--                                                             --
-- DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING --
-----------------------------------------------------------------

module NoteStore_Iface where
import Prelude ( Bool(..), Enum, Double, String, Maybe(..),
                 Eq, Show, Ord,
                 return, length, IO, fromIntegral, fromEnum, toEnum,
                 (&&), (||), (==), (++), ($), (-) )

import Control.Exception
import Data.ByteString.Lazy
import Data.Int
import Data.Typeable ( Typeable )
import qualified Data.Map as Map
import qualified Data.Set as Set

import Thrift

import qualified UserStore_Types
import qualified Types_Types
import qualified Errors_Types
import qualified Limits_Types


import NoteStore_Types

class NoteStore_Iface a where
  getSyncState :: a -> Maybe String -> IO SyncState
  getSyncChunk :: a -> Maybe String -> Maybe Int32 -> Maybe Int32 -> Maybe Bool -> IO SyncChunk
  getLinkedNotebookSyncState :: a -> Maybe String -> Maybe Types_Types.LinkedNotebook -> IO SyncState
  getLinkedNotebookSyncChunk :: a -> Maybe String -> Maybe Types_Types.LinkedNotebook -> Maybe Int32 -> Maybe Int32 -> Maybe Bool -> IO SyncChunk
  listNotebooks :: a -> Maybe String -> IO [Types_Types.Notebook]
  getNotebook :: a -> Maybe String -> Maybe String -> IO Types_Types.Notebook
  getDefaultNotebook :: a -> Maybe String -> IO Types_Types.Notebook
  createNotebook :: a -> Maybe String -> Maybe Types_Types.Notebook -> IO Types_Types.Notebook
  updateNotebook :: a -> Maybe String -> Maybe Types_Types.Notebook -> IO Int32
  expungeNotebook :: a -> Maybe String -> Maybe String -> IO Int32
  listTags :: a -> Maybe String -> IO [Types_Types.Tag]
  listTagsByNotebook :: a -> Maybe String -> Maybe String -> IO [Types_Types.Tag]
  getTag :: a -> Maybe String -> Maybe String -> IO Types_Types.Tag
  createTag :: a -> Maybe String -> Maybe Types_Types.Tag -> IO Types_Types.Tag
  updateTag :: a -> Maybe String -> Maybe Types_Types.Tag -> IO Int32
  untagAll :: a -> Maybe String -> Maybe String -> IO ()
  expungeTag :: a -> Maybe String -> Maybe String -> IO Int32
  listSearches :: a -> Maybe String -> IO [Types_Types.SavedSearch]
  getSearch :: a -> Maybe String -> Maybe String -> IO Types_Types.SavedSearch
  createSearch :: a -> Maybe String -> Maybe Types_Types.SavedSearch -> IO Types_Types.SavedSearch
  updateSearch :: a -> Maybe String -> Maybe Types_Types.SavedSearch -> IO Int32
  expungeSearch :: a -> Maybe String -> Maybe String -> IO Int32
  findNotes :: a -> Maybe String -> Maybe NoteFilter -> Maybe Int32 -> Maybe Int32 -> IO NoteList
  findNoteOffset :: a -> Maybe String -> Maybe NoteFilter -> Maybe String -> IO Int32
  findNotesMetadata :: a -> Maybe String -> Maybe NoteFilter -> Maybe Int32 -> Maybe Int32 -> Maybe NotesMetadataResultSpec -> IO NotesMetadataList
  findNoteCounts :: a -> Maybe String -> Maybe NoteFilter -> Maybe Bool -> IO NoteCollectionCounts
  getNote :: a -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> IO Types_Types.Note
  getNoteContent :: a -> Maybe String -> Maybe String -> IO String
  getNoteSearchText :: a -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> IO String
  getResourceSearchText :: a -> Maybe String -> Maybe String -> IO String
  getNoteTagNames :: a -> Maybe String -> Maybe String -> IO [String]
  createNote :: a -> Maybe String -> Maybe Types_Types.Note -> IO Types_Types.Note
  updateNote :: a -> Maybe String -> Maybe Types_Types.Note -> IO Types_Types.Note
  deleteNote :: a -> Maybe String -> Maybe String -> IO Int32
  expungeNote :: a -> Maybe String -> Maybe String -> IO Int32
  expungeNotes :: a -> Maybe String -> Maybe [String] -> IO Int32
  expungeInactiveNotes :: a -> Maybe String -> IO Int32
  copyNote :: a -> Maybe String -> Maybe String -> Maybe String -> IO Types_Types.Note
  listNoteVersions :: a -> Maybe String -> Maybe String -> IO [NoteVersionId]
  getNoteVersion :: a -> Maybe String -> Maybe String -> Maybe Int32 -> Maybe Bool -> Maybe Bool -> Maybe Bool -> IO Types_Types.Note
  getResource :: a -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> IO Types_Types.Resource
  updateResource :: a -> Maybe String -> Maybe Types_Types.Resource -> IO Int32
  getResourceData :: a -> Maybe String -> Maybe String -> IO ByteString
  getResourceByHash :: a -> Maybe String -> Maybe String -> Maybe ByteString -> Maybe Bool -> Maybe Bool -> Maybe Bool -> IO Types_Types.Resource
  getResourceRecognition :: a -> Maybe String -> Maybe String -> IO ByteString
  getResourceAlternateData :: a -> Maybe String -> Maybe String -> IO ByteString
  getResourceAttributes :: a -> Maybe String -> Maybe String -> IO Types_Types.ResourceAttributes
  getAccountSize :: a -> Maybe String -> IO Int64
  getAds :: a -> Maybe String -> Maybe AdParameters -> IO [Types_Types.Ad]
  getRandomAd :: a -> Maybe String -> Maybe AdParameters -> IO Types_Types.Ad
  getPublicNotebook :: a -> Maybe Int32 -> Maybe String -> IO Types_Types.Notebook
  createSharedNotebook :: a -> Maybe String -> Maybe Types_Types.SharedNotebook -> IO Types_Types.SharedNotebook
  listSharedNotebooks :: a -> Maybe String -> IO [Types_Types.SharedNotebook]
  expungeSharedNotebooks :: a -> Maybe String -> Maybe [Int64] -> IO Int32
  createLinkedNotebook :: a -> Maybe String -> Maybe Types_Types.LinkedNotebook -> IO Types_Types.LinkedNotebook
  updateLinkedNotebook :: a -> Maybe String -> Maybe Types_Types.LinkedNotebook -> IO Int32
  listLinkedNotebooks :: a -> Maybe String -> IO [Types_Types.LinkedNotebook]
  expungeLinkedNotebook :: a -> Maybe String -> Maybe String -> IO Int32
  authenticateToSharedNotebook :: a -> Maybe String -> Maybe String -> IO UserStore_Types.AuthenticationResult
  getSharedNotebookByAuth :: a -> Maybe String -> IO Types_Types.SharedNotebook
  emailNote :: a -> Maybe String -> Maybe NoteEmailParameters -> IO ()
  shareNote :: a -> Maybe String -> Maybe String -> IO String
  stopSharingNote :: a -> Maybe String -> Maybe String -> IO ()
  authenticateToSharedNote :: a -> Maybe String -> Maybe String -> IO UserStore_Types.AuthenticationResult
